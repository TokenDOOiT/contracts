{
  "contractName": "ReentrancyGuardUpgradeable",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Initializable.sol\":{\"keccak256\":\"0xe5b6acf404022036a5384e8d5d23aa4953756db9efdd90939384ee8603fdd45a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d94b4858606bf12f9d4f797482b53f249ad4eab6c8af047c02c95fe1da01790\",\"dweb:/ipfs/QmdqaAiBRvPp1FGBY8sLckqq6tL5iHLts7yxA8MnGNJXsa\"]},\"project:/contracts/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xf243a028f73aa2ecde57820409890147c28c7937579e4921f04873e41096c6cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68c4c7f2301e0f8e40ede2846cd01754a92c3138cb3911ba8f31b4b6825b78d0\",\"dweb:/ipfs/QmY14ShN6A8sCmb66APoridzUPNRd2UcgPABRrKiXbSFXq\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// solhint-disable no-empty-blocks\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.0 (security/ReentrancyGuard.sol)\n\npragma solidity >=0.8.9;\n\nimport \"./Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n  // Booleans are more expensive than uint256 or any type that takes up a full\n  // word because each write operation emits an extra SLOAD to first read the\n  // slot's contents, replace the bits taken up by the boolean, and then write\n  // back. This is the compiler's defense against contract upgrades and\n  // pointer aliasing, and it cannot be disabled.\n\n  // The values being non-zero value makes deployment a bit more expensive,\n  // but in exchange the refund on every call to nonReentrant will be lower in\n  // amount. Since refunds are capped to a percentage of the total\n  // transaction's gas, it is best to keep them low in cases like this one, to\n  // increase the likelihood of the full refund coming into effect.\n  uint256 private constant _NOT_ENTERED = 1;\n  uint256 private constant _ENTERED = 2;\n\n  uint256 private _status;\n\n  // solhint-disable func-name-mixedcase\n  function __ReentrancyGuard_init() internal initializer {\n    _status = _NOT_ENTERED;\n    __ReentrancyGuard_init_unchained();\n  }\n\n  // solhint-disable func-name-mixedcase\n  function __ReentrancyGuard_init_unchained() internal initializer {}\n\n  /**\n   * @dev Prevents a contract from calling itself, directly or indirectly.\n   * Calling a `nonReentrant` function from another `nonReentrant`\n   * function is not supported. It is possible to prevent this from happening\n   * by making the `nonReentrant` function external, and making it call a\n   * `private` function that does the actual work.\n   */\n  modifier nonReentrant() {\n    // On the first call to nonReentrant, _notEntered will be true\n    require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n    // Any calls to nonReentrant after this point will fail\n    _status = _ENTERED;\n\n    _;\n\n    // By storing the original value once again, a refund is triggered (see\n    // https://eips.ethereum.org/EIPS/eip-2200)\n    _status = _NOT_ENTERED;\n  }\n}\n",
  "sourcePath": "/Users/ifundeasy/Developer/dooit/sc-dooit/contracts/ReentrancyGuardUpgradeable.sol",
  "ast": {
    "absolutePath": "project:/contracts/ReentrancyGuardUpgradeable.sol",
    "exportedSymbols": {
      "Initializable": [
        6437
      ],
      "ReentrancyGuardUpgradeable": [
        6858
      ]
    },
    "id": 6859,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6806,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:24:22"
      },
      {
        "absolutePath": "project:/contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 6807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6859,
        "sourceUnit": 6438,
        "src": "159:29:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6809,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6437,
              "src": "989:13:22"
            },
            "id": 6810,
            "nodeType": "InheritanceSpecifier",
            "src": "989:13:22"
          }
        ],
        "canonicalName": "ReentrancyGuardUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6808,
          "nodeType": "StructuredDocumentation",
          "src": "190:750:22",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 6858,
        "linearizedBaseContracts": [
          6858,
          6437
        ],
        "name": "ReentrancyGuardUpgradeable",
        "nameLocation": "959:26:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6813,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nameLocation": "1760:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1735:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1735:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 6812,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1775:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6816,
            "mutability": "constant",
            "name": "_ENTERED",
            "nameLocation": "1805:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1780:37:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6814,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 6815,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1816:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6818,
            "mutability": "mutable",
            "name": "_status",
            "nameLocation": "1838:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1822:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6817,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1822:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6830,
              "nodeType": "Block",
              "src": "1946:73:22",
              "statements": [
                {
                  "expression": {
                    "id": 6825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6823,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "1952:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6824,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6813,
                      "src": "1962:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1952:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6826,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:22:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6827,
                      "name": "__ReentrancyGuard_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6837,
                      "src": "1980:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6829,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:34:22"
                }
              ]
            },
            "id": 6831,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6820,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6436,
                  "src": "1934:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1934:11:22"
              }
            ],
            "name": "__ReentrancyGuard_init",
            "nameLocation": "1900:22:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:2:22"
            },
            "returnParameters": {
              "id": 6822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:0:22"
            },
            "scope": 6858,
            "src": "1891:128:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6836,
              "nodeType": "Block",
              "src": "2129:2:22",
              "statements": []
            },
            "id": 6837,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6833,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6436,
                  "src": "2117:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2117:11:22"
              }
            ],
            "name": "__ReentrancyGuard_init_unchained",
            "nameLocation": "2073:32:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2105:2:22"
            },
            "returnParameters": {
              "id": 6835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2129:0:22"
            },
            "scope": 6858,
            "src": "2064:67:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6856,
              "nodeType": "Block",
              "src": "2516:387:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6841,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6818,
                          "src": "2597:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6842,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6816,
                          "src": "2608:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2597:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "id": 6844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2618:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
                      "id": 6840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2589:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:63:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6846,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:63:22"
                },
                {
                  "expression": {
                    "id": 6849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6847,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "2719:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6848,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6816,
                      "src": "2729:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2719:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6850,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:18:22"
                },
                {
                  "id": 6851,
                  "nodeType": "PlaceholderStatement",
                  "src": "2744:1:22"
                },
                {
                  "expression": {
                    "id": 6854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6852,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "2876:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6853,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6813,
                      "src": "2886:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2876:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6855,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:22:22"
                }
              ]
            },
            "documentation": {
              "id": 6838,
              "nodeType": "StructuredDocumentation",
              "src": "2135:354:22",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 6857,
            "name": "nonReentrant",
            "nameLocation": "2501:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:2:22"
            },
            "src": "2492:411:22",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6859,
        "src": "941:1964:22",
        "usedErrors": []
      }
    ],
    "src": "133:2773:22"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ReentrancyGuardUpgradeable.sol",
    "exportedSymbols": {
      "Initializable": [
        6437
      ],
      "ReentrancyGuardUpgradeable": [
        6858
      ]
    },
    "id": 6859,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6806,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "133:24:22"
      },
      {
        "absolutePath": "project:/contracts/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 6807,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6859,
        "sourceUnit": 6438,
        "src": "159:29:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6809,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6437,
              "src": "989:13:22"
            },
            "id": 6810,
            "nodeType": "InheritanceSpecifier",
            "src": "989:13:22"
          }
        ],
        "canonicalName": "ReentrancyGuardUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6808,
          "nodeType": "StructuredDocumentation",
          "src": "190:750:22",
          "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
        },
        "fullyImplemented": true,
        "id": 6858,
        "linearizedBaseContracts": [
          6858,
          6437
        ],
        "name": "ReentrancyGuardUpgradeable",
        "nameLocation": "959:26:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 6813,
            "mutability": "constant",
            "name": "_NOT_ENTERED",
            "nameLocation": "1760:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1735:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6811,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1735:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 6812,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1775:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 6816,
            "mutability": "constant",
            "name": "_ENTERED",
            "nameLocation": "1805:8:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1780:37:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6814,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 6815,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1816:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6818,
            "mutability": "mutable",
            "name": "_status",
            "nameLocation": "1838:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 6858,
            "src": "1822:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6817,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1822:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6830,
              "nodeType": "Block",
              "src": "1946:73:22",
              "statements": [
                {
                  "expression": {
                    "id": 6825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6823,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "1952:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6824,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6813,
                      "src": "1962:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1952:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6826,
                  "nodeType": "ExpressionStatement",
                  "src": "1952:22:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6827,
                      "name": "__ReentrancyGuard_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6837,
                      "src": "1980:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6829,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:34:22"
                }
              ]
            },
            "id": 6831,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6821,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6820,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6436,
                  "src": "1934:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1934:11:22"
              }
            ],
            "name": "__ReentrancyGuard_init",
            "nameLocation": "1900:22:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:2:22"
            },
            "returnParameters": {
              "id": 6822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1946:0:22"
            },
            "scope": 6858,
            "src": "1891:128:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6836,
              "nodeType": "Block",
              "src": "2129:2:22",
              "statements": []
            },
            "id": 6837,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6833,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6436,
                  "src": "2117:11:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2117:11:22"
              }
            ],
            "name": "__ReentrancyGuard_init_unchained",
            "nameLocation": "2073:32:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2105:2:22"
            },
            "returnParameters": {
              "id": 6835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2129:0:22"
            },
            "scope": 6858,
            "src": "2064:67:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6856,
              "nodeType": "Block",
              "src": "2516:387:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6841,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6818,
                          "src": "2597:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 6842,
                          "name": "_ENTERED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6816,
                          "src": "2608:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2597:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                        "id": 6844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2618:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        },
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                          "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                        }
                      ],
                      "id": 6840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2589:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:63:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6846,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:63:22"
                },
                {
                  "expression": {
                    "id": 6849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6847,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "2719:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6848,
                      "name": "_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6816,
                      "src": "2729:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2719:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6850,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:18:22"
                },
                {
                  "id": 6851,
                  "nodeType": "PlaceholderStatement",
                  "src": "2744:1:22"
                },
                {
                  "expression": {
                    "id": 6854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6852,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6818,
                      "src": "2876:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6853,
                      "name": "_NOT_ENTERED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6813,
                      "src": "2886:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2876:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6855,
                  "nodeType": "ExpressionStatement",
                  "src": "2876:22:22"
                }
              ]
            },
            "documentation": {
              "id": 6838,
              "nodeType": "StructuredDocumentation",
              "src": "2135:354:22",
              "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
            },
            "id": 6857,
            "name": "nonReentrant",
            "nameLocation": "2501:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2513:2:22"
            },
            "src": "2492:411:22",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6859,
        "src": "941:1964:22",
        "usedErrors": []
      }
    ],
    "src": "133:2773:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-27T18:55:56.533Z",
  "devdoc": {
    "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}